{"version":3,"file":"static/js/399.76f62b5f.chunk.js","mappings":"mKAKA,MA4HA,EA5HcA,KACd,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACxCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,IAEvCO,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KAEUC,WAChB,IACI,MAAMC,QAAiBC,MAHnB,wDAIEC,QAAaF,EAASG,OAC5Bf,EAASc,GACTX,GAAW,EACf,CAAE,MAAMa,GACJC,QAAQC,IAAI,sBAAuBF,GACnCb,GAAW,EACf,GAEDgB,EAAU,GACV,IAEH,MAIMC,EAvBe,GAuBGhB,EAClBiB,EAAmBD,EAxBJ,GA6BfE,GAAeC,EAAAA,EAAAA,UAAQ,IAClBxB,EACNyB,QAAQC,GAASA,EAAMC,KAAKC,cAAcC,SAAStB,EAAWqB,iBAC9DE,MAAMR,EAAkBD,IAC1B,CAACrB,EAAOO,EAAYF,IAGjB0B,EAAYC,GAAW1B,EAAe0B,GAEtCC,EAAYC,KAAKC,KAAKnC,EAAMoC,OAtCb,IAwCjB,OAEIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAE5BpC,GACIkC,EAAAA,EAAAA,KAACG,EAAAA,EAAO,KAERC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EAERE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wDAAuDC,SAAA,EAEpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQK,MAAO,CAAEC,aAAc,KAAML,SAAC,qBAGpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLP,UAAU,eACVQ,YAAY,0BACZC,MAAOxC,EACPyC,SAAWC,GAAMzC,EAAcyC,EAAEC,OAAOH,eAI9CV,EAAAA,EAAAA,KAAA,UAEIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,SAEpBhB,EAAa4B,KAAIzB,IACbW,EAAAA,EAAAA,KAAA,OAAoBC,UAAU,gEAA+DC,UAC7FE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,OACfK,MAAO,CAACS,OAAQ,UAAWC,OAAQ,QACnCC,QAASA,KArDJC,MACjB9C,EAAS,WAAD+C,QADSD,EAqDoB7B,GApDPC,MAAQ,CAAC8B,MAAOF,GAoDF,EAAAhB,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UACjCF,EAAAA,EAAAA,KAAA,OACAqB,IAAKhC,EAAMiC,aAAcC,IAAKlC,EAAMC,KAAMW,UAAU,oBAEpDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBE,EAAAA,EAAAA,MAAA,MAAIH,UAAU,aAAYC,SAAA,CAAEb,EAAMC,KAAK,aATjCD,EAAMmC,QAkBpB5B,EAAY,IACRQ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,UACAiB,QAASA,IAAKvB,EAAS1B,EAAa,GACpCyD,SAA0B,IAAhBzD,EAAkBkC,SAC3B,SAGR,IAAIwB,MAAM9B,IAAYkB,KAAI,CAACa,EAAGC,KAC3B5B,EAAAA,EAAAA,KAAA,UAEAiB,QAASA,IAAKvB,EAASkC,EAAQ,GAC/B3B,UAAWjC,IAAgB4D,EAAO,EAAI,SAAW,GAAG1B,SAElD0B,EAAQ,GAJLA,MAOT5B,EAAAA,EAAAA,KAAA,UACAiB,QAASA,IAAKvB,EAAS1B,EAAc,GACrCyD,SAAUzD,IAAe4B,EAAUM,SAClC,gBAOK,C","sources":["Event.js"],"sourcesContent":["import React, {useState, useEffect, useMemo} from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport './Event.css';\r\nimport Spinner from './Spinner';\r\n\r\nconst Event = ()=>{\r\nconst [posts, setPosts] = useState([])\r\nconst [loading, setLoading] = useState(true);\r\nconst [currentPage, setCurrentPage] = useState(1);\r\nconst [searchTerm, setSearchTerm] = useState('');\r\nconst postsPerPage = 18;\r\nconst navigate = useNavigate();\r\n\r\nuseEffect(()=>{\r\n   const url = `https://pgparks.com/wp-json/wp/v2/events?per_page=51`\r\n   const getPosts = async ()=>{\r\n    try{\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setPosts(data);\r\n        setLoading(false);\r\n    } catch(err){\r\n        console.log(`Error fetching Data`, err)\r\n        setLoading(false);\r\n    } \r\n}\r\n   getPosts();\r\n}, [])\r\n\r\nconst handleClick = (eventSlug)=>{\r\n    navigate(`/events/${eventSlug.slug}`, {state: eventSlug});\r\n}\r\n// Get the current posts to be displayed on current page\r\nconst indexOfLastPost = currentPage * postsPerPage;\r\nconst indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n//Without search\r\n//const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n// With search & use useMemo for filtering & pagination performance\r\nconst currentPosts = useMemo(()=>{\r\n    return posts\r\n    .filter((event)=> event.slug.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    .slice(indexOfFirstPost, indexOfLastPost);\r\n}, [posts, searchTerm, currentPage])\r\n\r\n//handle  page change\r\nconst paginate = (pageNum)=> setCurrentPage(pageNum);\r\n//calculate the total page\r\nconst totalPage = Math.ceil(posts.length/postsPerPage);\r\n\r\n    return (\r\n       \r\n        <div className='container-fluid'>\r\n        {\r\n            loading ? (\r\n                <Spinner />\r\n            ): (\r\n                <>\r\n                {/* Row with Heading and Search Input on the Same Line */}\r\n        <div className=\"row d-flex justify-content-between align-items-center\">\r\n          {/* Heading */}\r\n          <h3 className=\"col-8\" style={{ marginBottom: '0' }}>LISTS OF EVENTS</h3>\r\n\r\n          {/* Search Field on the right */}\r\n          <div className=\"col-4\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by event name...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <hr/>\r\n        \r\n            <div className='row'>\r\n            {\r\n            currentPosts.map(event=>(\r\n                <div key={event.id} className='col-lg-2 col-md-4 col-sm-6 mb-4 d-flex justify-content-center'>\r\n                <div className='card' \r\n                style={{cursor: 'pointer', height: '100%' }}\r\n                onClick={()=>handleClick(event)} >\r\n                <div className='card-img-wrapper'>\r\n                < img\r\n                src={event.featured_img} alt={event.slug} className=\"card-img-top\"  />\r\n                </div>\r\n                <div className='card-body'>\r\n                    <h5 className='card-title'>{event.slug} </h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            ))\r\n        }\r\n        </div>\r\n        {/* pagination controls  */}\r\n        {\r\n            totalPage > 1 && (\r\n                <div className='pagination'>\r\n                    <button\r\n                    onClick={()=> paginate(currentPage -1)}\r\n                    disabled={currentPage === 1}\r\n                    >                 \r\n                    Prev\r\n                        </button> \r\n            {[...Array(totalPage)].map((_, index)=>(\r\n                <button\r\n                key={index}\r\n                onClick={()=> paginate(index + 1)}\r\n                className={currentPage === index +1 ? 'active' : ''}\r\n                >\r\n                { index + 1}\r\n                </button>\r\n            ))}\r\n            <button\r\n            onClick={()=> paginate(currentPage + 1)}\r\n            disabled={currentPage ===totalPage}\r\n            >\r\n                Next\r\n            </button>\r\n                     </div>\r\n            )}      \r\n        </>\r\n            )}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Event;"],"names":["Event","posts","setPosts","useState","loading","setLoading","currentPage","setCurrentPage","searchTerm","setSearchTerm","navigate","useNavigate","useEffect","async","response","fetch","data","json","err","console","log","getPosts","indexOfLastPost","indexOfFirstPost","currentPosts","useMemo","filter","event","slug","toLowerCase","includes","slice","paginate","pageNum","totalPage","Math","ceil","length","_jsx","className","children","Spinner","_jsxs","_Fragment","style","marginBottom","type","placeholder","value","onChange","e","target","map","cursor","height","onClick","eventSlug","concat","state","src","featured_img","alt","id","disabled","Array","_","index"],"sourceRoot":""}